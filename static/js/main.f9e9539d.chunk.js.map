{"version":3,"sources":["components/Tutorial.js","components/TutorialButton.js","components/WikiButton.js","components/GameOfLife.js","utils/useForm.js","components/WelcomeScreen.js","App.js","reportWebVitals.js","index.js"],"names":["square","className","icon","faThLarge","size","listitem","Tutorial","onClick","TutorialButton","text","faBookOpen","WikiButton","article","to","pathname","target","faWikipediaW","GameOfLife","useState","height","width","dimensions","setDimensions","tutorialToggle","setTutorialToggle","initialValues","values","setValues","e","name","value","useForm","cellSize","gridWidth","gridHeight","speed","handleChange","rowsNum","colsNum","Array","fill","grid","setGrid","continuance","setContinuance","continuanceRef","useRef","current","operations","renderGrid","useCallback","console","log","map","rows","x","cols","y","setLivingCell","newGrid","useMemo","newGen","produce","genCopy","beginGeneration","g","neighbours","forEach","i","j","newX","newY","useEffect","handle","setInterval","clearInterval","style","backgroundImage","onSubmit","preventDefault","Number","htmlFor","id","type","onChange","faHourglassHalf","faFlagCheckered","faMeteor","cell","Math","random","faDice","WelcomeScreen","poster","autoPlay","muted","loop","src","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9e9539d.chunk.js","sourcesContent":["import { faThLarge } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\n\r\nconst square = (\r\n  <FontAwesomeIcon\r\n    className=\"hidden md:block align-bottom mr-4 md:mr-10 text-gray-100\"\r\n    icon={faThLarge}\r\n    size=\"xs\"\r\n    listitem=\"true\"\r\n  />\r\n);\r\n\r\nconst Tutorial = ({ onClick }) => {\r\n  return (\r\n    <div className=\"min-h-screen font-text min-w-full flex justify-center items-center z-20 fixed backdrop-filter backdrop-blur-sm\">\r\n      <div className=\"fixed overflow-y-auto z-30 w-full md:w-4/5 lg:w-3/5 xl:w-1/2 h-full lg:h-5/6 xl:h-3/4 flex flex-col lg:justify-around items-center p-3 opacity-90 bg-black border-gray-900 border-2 md:border-8 border-opacity-50 rounded-md\">\r\n        <h2 className=\"my-5 lg:m-0 text-2xl 2xl:text-4xl\">Tutorial</h2>\r\n        <ul className=\"text-sm text-justify xl:text-base 2xl:text-lg font-bold text-gray-400 px-2 md:px-3 lg:px-6 space-y-5 lg:space-y-3 2xl:space-y-5 leading-relaxed\">\r\n          <li className=\"inline-flex items-baseline\">\r\n            {square}\r\n            <p>\r\n              Set your world's dimensions with <b>height & width </b>\r\n              located on the panel's left. It is best not to exceed the screen\r\n              resolution by using <b>width</b>.\r\n            </p>\r\n          </li>\r\n          <p className=\"text-xs 2xl:text-sm text-gray-200 2xl:font-semibold text-center\">\r\n            (Remember to press Save! This will re-generate the world.)\r\n          </p>\r\n          <li className=\"inline-flex items-baseline\">\r\n            {square}{\" \"}\r\n            <p>\r\n              Center of the panel utilizes commands:{\" \"}\r\n              <b>Start/Pause, Wipe Out and Randomize</b> the World respectively.\r\n            </p>\r\n          </li>\r\n          <li className=\"inline-flex items-baseline\">\r\n            {square}\r\n            <p>\r\n              You can either use a randomly generated world or click on specific\r\n              cells to make them alive and vice versa. Then start your world by\r\n              pressing <b>Initiate</b>.\r\n            </p>\r\n          </li>\r\n          <li className=\"inline-flex items-baseline\">\r\n            {square}\r\n            <p>\r\n              The right side contains <b>Live Values</b>, which means that any\r\n              interference will result in an <b>immediate change</b> in the\r\n              World. <b>Cell size</b> is counted in pixels, <b>Speed</b> in\r\n              milliseconds (duration of 1 generation).\r\n            </p>\r\n          </li>\r\n\r\n          <p className=\"text-gray-200 text-center\">\r\n            You can bring into being as many cells as you like, but the trick is\r\n            to form a sustainable life using only a few of them!\r\n          </p>\r\n        </ul>\r\n        <button\r\n          className=\"my-5 lg:my-0 bg-gradient-to-r 2xl:font-bold from-gray-500 to-gray-800 focus:outline-none py-2 2xl:py-3 w-2/3 xl:w-3/5 2xl:w-1/2\"\r\n          onClick={onClick}\r\n        >\r\n          Got it!\r\n        </button>\r\n        <div className=\"absolute h-8 w-8 lg:border-4 lg:border-l-0 lg:border-t-0 border-white z-30 bottom-2 right-2\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tutorial;\r\n","import { faBookOpen } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\n\r\nconst TutorialButton = ({ onClick, className, text }) => {\r\n  return (\r\n    <div onClick={onClick} className={className}>\r\n      <span className=\"w-12 h-12 lg:w-14 lg:h-14 flex justify-center items-center bg-gradient-to-r from-gray-500 to-gray-800 rounded-full\">\r\n        {\" \"}\r\n        <FontAwesomeIcon size=\"lg\" icon={faBookOpen} />\r\n      </span>\r\n      <p className=\"hidden lg:block mt-1 \">{text}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TutorialButton;\r\n","import { faWikipediaW } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst WikiButton = ({ article, className, text }) => {\r\n  return (\r\n    <Link\r\n      to={{\r\n        pathname: `https://en.wikipedia.org/w/index.php?title=Conway%27s_Game_of_Life&oldid=1014218578${article}`,\r\n      }}\r\n      className={className}\r\n      target=\"_blank\"\r\n    >\r\n      <span className=\"w-12 h-12 lg:w-14 lg:h-14 flex justify-center items-center bg-gradient-to-r from-gray-500 to-gray-800 rounded-full\">\r\n        {\" \"}\r\n        <FontAwesomeIcon size=\"lg\" icon={faWikipediaW} />\r\n      </span>\r\n      <p className=\"hidden lg:block mt-1 \">{text}</p>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default WikiButton;\r\n","import {\r\n  faDice,\r\n  faFlagCheckered,\r\n  faHourglassHalf,\r\n  faMeteor,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport produce from \"immer\";\r\nimport React, {\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n  useMemo,\r\n} from \"react\";\r\nimport { useForm } from \"../utils/useForm\";\r\nimport Tutorial from \"./Tutorial\";\r\nimport TutorialButton from \"./TutorialButton\";\r\nimport WikiButton from \"./WikiButton\";\r\n\r\nconst GameOfLife = () => {\r\n  const [dimensions, setDimensions] = useState({ height: 30, width: 50 });\r\n  const [tutorialToggle, setTutorialToggle] = useState(true);\r\n  const [values, handleChange] = useForm({\r\n    cellSize: 20,\r\n    gridWidth: 50,\r\n    gridHeight: 30,\r\n    speed: 150,\r\n  });\r\n\r\n  const rowsNum = dimensions.height;\r\n  const colsNum = dimensions.width;\r\n\r\n  const [grid, setGrid] = useState(() =>\r\n    Array(rowsNum).fill(Array(colsNum).fill(0))\r\n  );\r\n\r\n  const [continuance, setContinuance] = useState(false);\r\n  const continuanceRef = useRef(continuance);\r\n  continuanceRef.current = continuance;\r\n\r\n  //this helps to locate each and every neighbour of given cell\r\n  //doesn't include the cell itself (0,0)\r\n  const operations = [\r\n    [0, 1],\r\n    [0, -1],\r\n    [1, -1],\r\n    [-1, 1],\r\n    [1, 1],\r\n    [-1, -1],\r\n    [1, 0],\r\n    [-1, 0],\r\n  ];\r\n\r\n  // working on random cell color\r\n  //   const colors = [\r\n  //     \"bg-red-600\",\r\n  //     \"bg-blue-600\",\r\n  //     \"bg-white\",\r\n  //     \"bg-greed-600\",\r\n  //     \"bg-yellow-600\",\r\n  //   ];\r\n  //  const randomColor = colors[Math.floor(Math.random() * 5)];\r\n\r\n  const renderGrid = useCallback(() => {\r\n    // \"x\" is row index\r\n    // \"y\" is column index\r\n\r\n    console.log(\"hehe\");\r\n\r\n    return grid.map((rows, x) =>\r\n      rows.map((cols, y) => (\r\n        <div\r\n          className={\r\n            \"w-full h-full border border-t-0 border-l-0 border-gray-700 \" +\r\n            (grid[x][y] ? \"bg-gray-200\" : \"\")\r\n          }\r\n          key={`${x}-${y}`}\r\n          onClick={() => setLivingCell(x, y)}\r\n        />\r\n      ))\r\n    );\r\n  }, [grid]);\r\n\r\n  // using memoized grid version, so it does not re-render without actual change\r\n  const newGrid = useMemo(() => renderGrid(), [renderGrid]);\r\n\r\n  const setLivingCell = (x, y) => {\r\n    const newGen = produce(grid, (genCopy) => {\r\n      //when grid[x][y] is 0, it turns to 1, and the opposite\r\n      genCopy[x][y] = 1 - grid[x][y];\r\n    });\r\n    setGrid(newGen);\r\n  };\r\n\r\n  const handleBegining = () => {\r\n    setContinuance(!continuance);\r\n    if (!continuance) {\r\n      continuanceRef.current = true;\r\n      beginGeneration();\r\n    }\r\n  };\r\n\r\n  const handleObliviate = () => {\r\n    setGrid(Array(rowsNum).fill(Array(colsNum).fill(0)));\r\n  };\r\n\r\n  const handleRandomize = () => {\r\n    let newGen = [...grid];\r\n    for (let x = 0; x < rowsNum; x++) {\r\n      newGen[x] = newGen[x].map((cell) => (cell = Math.random() > 0.8 ? 1 : 0));\r\n    }\r\n\r\n    setGrid(newGen);\r\n  };\r\n\r\n  const beginGeneration = useCallback(() => {\r\n    if (!continuanceRef.current) return;\r\n\r\n    //producing copy of grid which we can mutate, iterating through each cell\r\n    setGrid((g) => {\r\n      return produce(g, (genCopy) => {\r\n        for (let x = 0; x < rowsNum; x++) {\r\n          for (let y = 0; y < colsNum; y++) {\r\n            let neighbours = 0;\r\n            //adding all possible coordinates from 'operations' array to given cell to find living neighbours\r\n            operations.forEach(([i, j]) => {\r\n              const newX = x + i;\r\n              const newY = y + j;\r\n              //checking for valid index (so it doesn't exceed the dimensions of the grid ), only then adding neighbours\r\n              if (newX >= 0 && newX < rowsNum && newY >= 0 && newY < colsNum)\r\n                neighbours += g[newX][newY];\r\n            });\r\n            // checking Conway's rules of the Game - killing/reviving the cell\r\n            if (neighbours < 2 || neighbours > 3) genCopy[x][y] = 0;\r\n            else if (g[x][y] === 0 && neighbours === 3) genCopy[x][y] = 1;\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }, [dimensions, grid]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //setting new dimensions for grid\r\n    setGrid(\r\n      Array(Number(values.gridHeight)).fill(\r\n        Array(Number(values.gridWidth)).fill(0)\r\n      )\r\n    );\r\n    setDimensions({\r\n      height: Number(values.gridHeight),\r\n      width: Number(values.gridWidth),\r\n    });\r\n  };\r\n  const handleToggle = () => {\r\n    setTutorialToggle(!tutorialToggle);\r\n  };\r\n\r\n  useEffect(() => {\r\n    //setting game's speed (duration of each generation)\r\n    const handle = setInterval(beginGeneration, values.speed);\r\n\r\n    return () => clearInterval(handle);\r\n  }, [beginGeneration]);\r\n\r\n  return (\r\n    <div\r\n      style={{ backgroundImage: `url(/game-of-life/poster.jpg)` }}\r\n      className={\r\n        \"flex flex-col relative bg-black font-text bg-cover pb-8 bg-fixed bg-center text-white min-h-screen min-w-full \" +\r\n        (tutorialToggle ? \"h-screen overflow-hidden\" : \"h-full\")\r\n      }\r\n    >\r\n      <div className=\"overflow-x-auto backdrop-filter backdrop-blur-md grid grid-cols-9 w-full h-32 lg:h-48 2xl:h-52\">\r\n        <div className=\"w-full flex flex-col items-center mt-2 lg:mt-4 cols-start-1 col-span-4 xs:col-span-3\">\r\n          {\" \"}\r\n          <h2 className=\"text-xl lg:text-2xl 2xl:text-3xl mb-1 lg:mb-2 text-center\">\r\n            World size :\r\n          </h2>\r\n          <form\r\n            className=\"w-5/6 xs:w-2/3 xl:w-3/5 2xl:w-1/2 flex flex-col text-sm lg:text-base 2xl:text-xl\"\r\n            onSubmit={handleSubmit}\r\n          >\r\n            <div className=\"font-semibold my-1 lg:my-2 flex flex-row justify-between\">\r\n              <label htmlFor=\"gridHeight\">Height:</label>\r\n\r\n              <input\r\n                value={values.gridHeight}\r\n                name=\"gridHeight\"\r\n                id=\"gridHeight\"\r\n                type=\"number\"\r\n                onChange={handleChange}\r\n                className=\"bg-gray-500 text-right w-1/2 focus:outline-none\"\r\n              />\r\n            </div>\r\n            <div className=\"font-semibold my-1 lg:my-2 flex flex-row justify-between\">\r\n              <label htmlFor=\"gridWidth\">Width:</label>\r\n              <input\r\n                value={values.gridWidth}\r\n                name=\"gridWidth\"\r\n                id=\"gridWidth\"\r\n                type=\"number\"\r\n                onChange={handleChange}\r\n                className=\"bg-gray-500 text-right w-1/2 focus:outline-none\"\r\n              />\r\n            </div>\r\n            <button\r\n              className=\"mt-1 lg:mt-2 bg-gradient-to-r focus:outline-none font-bold from-gray-500 to-gray-800 px-6 py-0.5 lg:py-1 \"\r\n              type=\"submit\"\r\n            >\r\n              Save\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div className=\"cols-start-4 col-span-1 xs:col-span-3 flex flex-col items-center justify-around bg-gradient-to-r from-gray-500 to-gray-800\">\r\n          <h1 className=\"hidden xs:block font-header text-2xl md:text-3xl lg:text-4xl xl:text-5xl text-center\">\r\n            GAME of LIFE\r\n          </h1>\r\n\r\n          <div className=\"grid w-full xs:w-3/4 lg:w-auto grid-rows-3 xs:grid-rows-none xs:grid-cols-3 gap-2 pt-1 xs:gap-10 lg:gap-3 xl:gap-8 2xl:mt-2 2xl:gap-10\">\r\n            <button\r\n              className={\r\n                \"flex flex-col text-white items-center justify-around text-xs lg:text-sm font-bold xl:border rounded-xl xl:hover:bg-gray-900 focus:outline-none border-gray-200 xs:w-full lg:h-20 lg:w-28 2xl:text-lg 2xl:h-28 2xl:w-36 \" +\r\n                (continuance ? \"xl:bg-gray-800\" : \"\")\r\n              }\r\n              onClick={handleBegining}\r\n            >\r\n              {\" \"}\r\n              {continuance ? (\r\n                <>\r\n                  <FontAwesomeIcon icon={faHourglassHalf} size=\"3x\" />\r\n                  <span className=\"hidden lg:block\">Restrain</span>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <FontAwesomeIcon icon={faFlagCheckered} size=\"3x\" />\r\n                  <span className=\"hidden lg:block\">Initiate</span>\r\n                </>\r\n              )}\r\n            </button>\r\n            <button\r\n              className=\"flex flex-col text-white items-center justify-around text-xs lg:text-sm font-bold xl:border rounded-xl xl:hover:bg-gray-900 focus:outline-none border-gray-200 xs:w-full lg:h-20 lg:w-28 2xl:text-lg 2xl:h-28 2xl:w-36\"\r\n              onClick={handleObliviate}\r\n            >\r\n              <FontAwesomeIcon icon={faMeteor} size=\"3x\" />\r\n              <span className=\"hidden lg:block\">Obliviate</span>\r\n            </button>\r\n            <button\r\n              className=\"flex flex-col text-white items-center justify-around text-xs lg:text-sm font-bold xl:border rounded-xl xl:hover:bg-gray-900 focus:outline-none border-gray-200 xs:w-full lg:h-20 lg:w-28 2xl:text-lg 2xl:h-28 2xl:w-36\"\r\n              onClick={handleRandomize}\r\n            >\r\n              {\" \"}\r\n              <FontAwesomeIcon icon={faDice} size=\"3x\" />\r\n              <span className=\"hidden lg:block\">Scattershot</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"cols-start-8 col-span-4 xs:col-span-3 w-full mt-2 lg:mt-4 flex flex-col text-sm lg:text-base 2xl:text-xl items-center\">\r\n          <h2 className=\"text-xl lg:text-2xl 2xl:text-3xl text-center mb-2 lg:mb-6\">\r\n            Live values :\r\n          </h2>\r\n          <div className=\"font-semibold my-2 flex flex-row w-5/6 xs:w-2/3 xl:w-3/5 2xl:w-1/2 justify-between\">\r\n            <label htmlFor=\"cellSize\">Cell size:</label>\r\n            <input\r\n              value={values.cellSize}\r\n              id=\"cellSize\"\r\n              name=\"cellSize\"\r\n              type=\"number\"\r\n              onChange={handleChange}\r\n              className=\" bg-gray-500 text-right w-2/5 xs:w-1/2 focus:outline-none\"\r\n            />\r\n          </div>\r\n          <div className=\"font-semibold my-2 flex flex-row w-5/6 xs:w-2/3 xl:w-3/5 2xl:w-1/2 justify-between\">\r\n            <label htmlFor=\"speed\">Speed:</label>\r\n            <input\r\n              value={values.speed}\r\n              name=\"speed\"\r\n              id=\"speed\"\r\n              type=\"number\"\r\n              onChange={handleChange}\r\n              className=\" bg-gray-500 text-right w-2/5 xs:w-1/2 focus:outline-none\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"bg-gradient-to-r from-gray-500 to-gray-800 w-full h-1 lg:h-2\"></div>\r\n\r\n      <div className=\"overflow-x-auto min-h-full flex-1 inline-block mt-3 pb-3 lg:mt-8 mx-4 lg:mx-8\">\r\n        <div\r\n          className=\"grid border border-b-0 border-r-0 border-gray-700 w-max mx-auto\"\r\n          style={{\r\n            grid: `repeat(${dimensions.height}, ${values.cellSize}px)/ repeat(${dimensions.width}, ${values.cellSize}px)`,\r\n          }}\r\n        >\r\n          {newGrid}\r\n        </div>\r\n      </div>\r\n      {tutorialToggle && <Tutorial onClick={handleToggle} />}\r\n      <TutorialButton\r\n        className={\r\n          \"transition-all fixed flex flex-col cursor-pointer items-center bottom-5 lg:bottom-8 right-5 lg:right-12 text-gray-300 font-bold\"\r\n        }\r\n        text=\"Tutorial\"\r\n        onClick={() => setTutorialToggle(!tutorialToggle)}\r\n      />\r\n      <WikiButton\r\n        className={\r\n          \"fixed flex flex-col items-center bottom-5 lg:bottom-8 left-5 text-gray-300 font-bold\"\r\n        }\r\n        text=\"Examples of patterns\"\r\n        article={\"#Examples_of_patterns\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default GameOfLife;\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (initialValues) => {\r\n  const [values, setValues] = useState(initialValues);\r\n\r\n  return [\r\n    values,\r\n    (e) => {\r\n      setValues({\r\n        ...values,\r\n        [e.target.name]: e.target.value,\r\n      });\r\n    },\r\n  ];\r\n};\r\n","import { faThLarge } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport WikiButton from \"./WikiButton\";\r\n\r\nconst square = (\r\n  <FontAwesomeIcon\r\n    className=\"align-bottom mr-4 md:mr-10 text-gray-100\"\r\n    icon={faThLarge}\r\n    size=\"xs\"\r\n    listitem=\"true\"\r\n  />\r\n);\r\n\r\nconst WelcomeScreen = () => {\r\n  return (\r\n    <div className=\"text-white fixed text-justify text-xl sm:font-text flex justify-center items-center z-0 h-screen w-full bg-black\">\r\n      <div className=\"overflow-y-auto lg:w-2/3 xl:w-2/3 2xl:w-3/5 2xl:h-5/6 relative flex p-3 opacity-90 flex-col justify-between 2xl:justify-around items-center h-full z-10 bg-black border-gray-900 border-8 border-opacity-50 rounded-md\">\r\n        <WikiButton\r\n          text=\"Wiki article\"\r\n          className={\r\n            \"text-gray-300 cursor-pointer w-16 h-16 absolute inset-0 lg:inset-3 2xl:inset-8 flex flex-col justify-center items-center sm:w-28 sm:h-28\"\r\n          }\r\n        />\r\n        <h1 className=\"text-center font-header my-8 text-4xl sm:text-5xl xl:text-6xl\">\r\n          GAME of LIFE\r\n        </h1>\r\n        <h2 className=\"text-2xl xl:text-3xl 2xl:text-3xl mt-5\">\r\n          There are only 4 rules :\r\n        </h2>\r\n        <ul className=\"my-5 ml-2 md:my-3 sm:px-6 md:px-10 2xl:px-20 md:leading-relaxed text-gray-400 text-base sm:text-lg md:text-xl 2xl:leading-relaxed space-y-4\">\r\n          <li className=\"inline-flex font-base items-baseline\">\r\n            {\" \"}\r\n            {square}\r\n            <p>\r\n              Any live cell with <b>fewer than two</b> live neighbours dies, as\r\n              if by underpopulation.\r\n            </p>\r\n          </li>{\" \"}\r\n          <li className=\"inline-flex items-baseline\">\r\n            {square}\r\n            <p>\r\n              Any live cell with <b>two or three</b> live neighbours lives on to\r\n              the next generation.\r\n            </p>\r\n          </li>\r\n          <li className=\"inline-flex items-baseline\">\r\n            {square}\r\n            <p>\r\n              Any live cell with <b>more than three</b> live neighbours dies, as\r\n              if by overpopulation.\r\n            </p>\r\n          </li>\r\n          <li className=\"inline-flex items-baseline\">\r\n            {square}\r\n            <p>\r\n              Any dead cell with <b>exactly three</b> live neighbours becomes a\r\n              live cell, as if by reproduction.\r\n            </p>\r\n          </li>\r\n        </ul>\r\n        <Link\r\n          className=\"justify-items-end mb-3 w-1/2 2xl:w-1/3 h-12 lg:mt-2\"\r\n          to=\"/game-of-life/play\"\r\n        >\r\n          {\" \"}\r\n          <button className=\"transition duration-150 transform hover:translate-y-1 hover:scale-105 w-full h-full text-xl 2xl:text-2xl bg-gradient-to-r from-gray-500 to-gray-800\">\r\n            Begin\r\n          </button>\r\n        </Link>\r\n      </div>\r\n\r\n      <video\r\n        className=\"z-0 fixed hidden md:block\"\r\n        id=\"background\"\r\n        poster=\"/game-of-life/poster.jpg\"\r\n        autoPlay\r\n        muted\r\n        loop\r\n      >\r\n        <source src=\"/game-of-life/background.mp4\" type=\"video/mp4\"></source>\r\n      </video>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WelcomeScreen;\r\n","import React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport GameOfLife from \"./components/GameOfLife\";\nimport WelcomeScreen from \"./components/WelcomeScreen\";\nconst App = () => {\n  return (\n    <>\n      <Switch>\n        <Route path=\"/game-of-life\" exact component={WelcomeScreen} />\n        <Route path=\"/game-of-life/play\" component={GameOfLife} />\n        <Redirect exact to=\"/game-of-life\" />\n      </Switch>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}